// <auto-generated />
using System;
using DA_Management_Endpoint.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DA_Management_Endpoint.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DA_Management_Endpoint.Models.AcademicYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.HasKey("Id");

                    b.ToTable("AcademicYears", (string)null);
                });

            modelBuilder.Entity("DA_Management_Endpoint.Models.Attendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int>("CreatedByCatechistId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<int>("UpdatedByCatechistId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByCatechistId");

                    b.HasIndex("StudentId");

                    b.HasIndex("UpdatedByCatechistId");

                    b.HasIndex("ClassId", "StudentId", "Date")
                        .IsUnique();

                    b.ToTable("Attendances", (string)null);
                });

            modelBuilder.Entity("DA_Management_Endpoint.Models.Block", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Blocks", (string)null);
                });

            modelBuilder.Entity("DA_Management_Endpoint.Models.Catechist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Contact")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("HolyName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("JoinedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Catechists", (string)null);
                });

            modelBuilder.Entity("DA_Management_Endpoint.Models.CatechistProfile", b =>
                {
                    b.Property<int>("CatechistId")
                        .HasColumnType("int");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("CatechistId", "ProfileId");

                    b.HasIndex("ProfileId");

                    b.ToTable("CatechistProfiles", (string)null);
                });

            modelBuilder.Entity("DA_Management_Endpoint.Models.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AcademicYearId")
                        .HasColumnType("int");

                    b.Property<int>("BlockId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AcademicYearId");

                    b.HasIndex("BlockId");

                    b.ToTable("Classes", (string)null);
                });

            modelBuilder.Entity("DA_Management_Endpoint.Models.ClassCatechist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CatechistId")
                        .HasColumnType("int");

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<bool>("IsMainCatechist")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("CatechistId");

                    b.HasIndex("ClassId");

                    b.ToTable("ClassCatechists", (string)null);
                });

            modelBuilder.Entity("DA_Management_Endpoint.Models.Profile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<bool>("P1")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("P10")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("P11")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("P12")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("P13")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("P14")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("P15")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("P16")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("P17")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("P18")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("P19")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("P2")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("P20")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("P21")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("P22")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("P23")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("P24")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("P3")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("P4")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("P5")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("P6")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("P7")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("P8")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("P9")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Profiles", (string)null);
                });

            modelBuilder.Entity("DA_Management_Endpoint.Models.RegistrationSection", b =>
                {
                    b.Property<string>("Guid")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("InitDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.HasKey("Guid");

                    b.ToTable("RegistrationSections", (string)null);
                });

            modelBuilder.Entity("DA_Management_Endpoint.Models.Score", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<float>("CatechismMark")
                        .HasColumnType("float");

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int>("CreatedByCatechistId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Note")
                        .HasColumnType("longtext");

                    b.Property<float>("PrayerMark")
                        .HasColumnType("float");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<string>("Term")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<int>("UpdatedByCatechistId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("CreatedByCatechistId");

                    b.HasIndex("StudentId");

                    b.HasIndex("UpdatedByCatechistId");

                    b.ToTable("Scores", (string)null);
                });

            modelBuilder.Entity("DA_Management_Endpoint.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("ClassId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Contact")
                        .HasColumnType("longtext");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Dad")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("HolyName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Mom")
                        .HasColumnType("longtext");

                    b.Property<string>("Note")
                        .HasColumnType("longtext");

                    b.Property<string>("SacramentBaptism")
                        .HasColumnType("longtext");

                    b.Property<string>("SacramentConfirmation")
                        .HasColumnType("longtext");

                    b.Property<string>("SacramentFirstConfession")
                        .HasColumnType("longtext");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Students", (string)null);
                });

            modelBuilder.Entity("DA_Management_Endpoint.Models.StudentRevision", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int>("CreatedByCatechistId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("History")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("CreatedByCatechistId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentRevisions", (string)null);
                });

            modelBuilder.Entity("DA_Management_Endpoint.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool?>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("DA_Management_Endpoint.Models.Attendance", b =>
                {
                    b.HasOne("DA_Management_Endpoint.Models.Class", "Class")
                        .WithMany("Attendances")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DA_Management_Endpoint.Models.Catechist", "CreatedByCatechist")
                        .WithMany()
                        .HasForeignKey("CreatedByCatechistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DA_Management_Endpoint.Models.Student", "Student")
                        .WithMany("Attendances")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DA_Management_Endpoint.Models.Catechist", "UpdatedByCatechist")
                        .WithMany()
                        .HasForeignKey("UpdatedByCatechistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("CreatedByCatechist");

                    b.Navigation("Student");

                    b.Navigation("UpdatedByCatechist");
                });

            modelBuilder.Entity("DA_Management_Endpoint.Models.CatechistProfile", b =>
                {
                    b.HasOne("DA_Management_Endpoint.Models.Catechist", "Catechist")
                        .WithMany("CatechistProfiles")
                        .HasForeignKey("CatechistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DA_Management_Endpoint.Models.Profile", "Profile")
                        .WithMany("CatechistProfiles")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Catechist");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("DA_Management_Endpoint.Models.Class", b =>
                {
                    b.HasOne("DA_Management_Endpoint.Models.AcademicYear", "AcademicYear")
                        .WithMany("Classes")
                        .HasForeignKey("AcademicYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DA_Management_Endpoint.Models.Block", "Block")
                        .WithMany("Classes")
                        .HasForeignKey("BlockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AcademicYear");

                    b.Navigation("Block");
                });

            modelBuilder.Entity("DA_Management_Endpoint.Models.ClassCatechist", b =>
                {
                    b.HasOne("DA_Management_Endpoint.Models.Catechist", "Catechist")
                        .WithMany("ClassCatechists")
                        .HasForeignKey("CatechistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DA_Management_Endpoint.Models.Class", "Class")
                        .WithMany("ClassCatechists")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Catechist");

                    b.Navigation("Class");
                });

            modelBuilder.Entity("DA_Management_Endpoint.Models.Profile", b =>
                {
                    b.HasOne("DA_Management_Endpoint.Models.Catechist", "CreatedByCatechist")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DA_Management_Endpoint.Models.Catechist", "UpdatedByCatechist")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedByCatechist");

                    b.Navigation("UpdatedByCatechist");
                });

            modelBuilder.Entity("DA_Management_Endpoint.Models.Score", b =>
                {
                    b.HasOne("DA_Management_Endpoint.Models.Class", "Class")
                        .WithMany("Scores")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DA_Management_Endpoint.Models.Catechist", "CreatedByCatechist")
                        .WithMany()
                        .HasForeignKey("CreatedByCatechistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DA_Management_Endpoint.Models.Student", "Student")
                        .WithMany("Scores")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DA_Management_Endpoint.Models.Catechist", "UpdatedByCatechist")
                        .WithMany()
                        .HasForeignKey("UpdatedByCatechistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("CreatedByCatechist");

                    b.Navigation("Student");

                    b.Navigation("UpdatedByCatechist");
                });

            modelBuilder.Entity("DA_Management_Endpoint.Models.Student", b =>
                {
                    b.HasOne("DA_Management_Endpoint.Models.Class", "Class")
                        .WithMany("Students")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DA_Management_Endpoint.Models.Catechist", "CreatedByCatechist")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DA_Management_Endpoint.Models.Catechist", "UpdatedByCatechist")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Class");

                    b.Navigation("CreatedByCatechist");

                    b.Navigation("UpdatedByCatechist");
                });

            modelBuilder.Entity("DA_Management_Endpoint.Models.StudentRevision", b =>
                {
                    b.HasOne("DA_Management_Endpoint.Models.Class", "Class")
                        .WithMany("StudentRevisions")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DA_Management_Endpoint.Models.Catechist", "CreatedByCatechist")
                        .WithMany()
                        .HasForeignKey("CreatedByCatechistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DA_Management_Endpoint.Models.Student", "Student")
                        .WithMany("StudentRevisions")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("CreatedByCatechist");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("DA_Management_Endpoint.Models.User", b =>
                {
                    b.HasOne("DA_Management_Endpoint.Models.Catechist", "Catechist")
                        .WithOne("User")
                        .HasForeignKey("DA_Management_Endpoint.Models.User", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Catechist");
                });

            modelBuilder.Entity("DA_Management_Endpoint.Models.AcademicYear", b =>
                {
                    b.Navigation("Classes");
                });

            modelBuilder.Entity("DA_Management_Endpoint.Models.Block", b =>
                {
                    b.Navigation("Classes");
                });

            modelBuilder.Entity("DA_Management_Endpoint.Models.Catechist", b =>
                {
                    b.Navigation("CatechistProfiles");

                    b.Navigation("ClassCatechists");

                    b.Navigation("User")
                        .IsRequired();
                });

            modelBuilder.Entity("DA_Management_Endpoint.Models.Class", b =>
                {
                    b.Navigation("Attendances");

                    b.Navigation("ClassCatechists");

                    b.Navigation("Scores");

                    b.Navigation("StudentRevisions");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("DA_Management_Endpoint.Models.Profile", b =>
                {
                    b.Navigation("CatechistProfiles");
                });

            modelBuilder.Entity("DA_Management_Endpoint.Models.Student", b =>
                {
                    b.Navigation("Attendances");

                    b.Navigation("Scores");

                    b.Navigation("StudentRevisions");
                });
#pragma warning restore 612, 618
        }
    }
}
